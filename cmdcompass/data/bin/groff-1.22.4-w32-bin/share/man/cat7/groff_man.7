GROFF_MAN(7)           Miscellaneous Information Manual           GROFF_MAN(7)



NNAAMMEE
       groff_man - GNU roff macro package for formatting man pages

SSYYNNOOPPSSIISS
       ggrrooffff --mmaann [_o_p_t_i_o_n ...] [_i_n_p_u_t_-_f_i_l_e ...]
       ggrrooffff --mm mmaann [_o_p_t_i_o_n ...] [_i_n_p_u_t_-_f_i_l_e ...]

DDEESSCCRRIIPPTTIIOONN
       The  _m_a_n  macro  package  for  _g_r_o_f_f  is  used  to produce manual pages
       ("man pages") like the one you are reading.  GNU _r_o_f_f's  implementation
       was written by James Clark.

       This  document  presents  the  macros thematically to aid learners; for
       those needing only a quick reference, the following  table  lists  them
       alphabetically, with cross-references to appropriate subsections below.

       Macro   Meaning                         Subsection
       -------------------------------------------------------------------
       ..BB      Bold                            Font style macros
       ..BBII     Bold, italic alternating        Font style macros
       ..BBRR     Bold, roman alternating         Font style macros
       ..EEEE     Example end                     Document structure macros
       ..EEXX     Example begin                   Document structure macros
       ..II      Italic                          Font style macros
       ..IIBB     Italic, bold alternating        Font style macros
       ..IIPP     Indented paragraph              Paragraph macros
       ..IIRR     Italic, roman alternating       Font style macros
       ..LLPP     (Left) paragraph                Paragraph macros
       ..MMEE     Mail-to end                     Hyperlink and email macros
       ..MMTT     Mail-to start                   Hyperlink and email macros
       ..OOPP     (Command-line) option           Command synopsis macros
       ..PP      Paragraph                       Paragraph macros
       ..PPPP     Paragraph                       Paragraph macros
       ..RRBB     Roman, bold alternating         Font style macros
       ..RREE     Relative-indent end             Document structure macros
       ..RRII     Roman, italic alternating       Font style macros
       ..RRSS     Relative-indent start           Document structure macros
       ..SSBB     Small bold                      Font style macros
       ..SSHH     Section heading                 Document structure macros
       ..SSMM     Small                           Font style macros
       ..SSSS     Subection heading               Document structure macros
       ..SSYY     Synopsis start                  Command synopsis macros
       ..TTHH     Title heading                   Document structure macros
       ..TTPP     Tagged paragraph                Paragraph macros
       ..TTQQ     Tagged paragraph continuation   Paragraph macros
       ..UUEE     URL end                         Hyperlink and email macros
       ..UURR     URL start                       Hyperlink and email macros
       ..YYSS     Synopsis end                    Command synopsis macros

       Macros  whose use we discourage (..AATT, ..BBTT, ..DDTT, ..HHPP, ..PPDD, ..PPTT, and ..UUCC)
       are described in subsection "Deprecated features", below.

   MMaaccrroo rreeffeerreennccee pprreelliimmiinnaarriieess
       Each macro is described in a tagged paragraph.  Closely related macros,
       such as ..EEXX and ..EEEE, are grouped together.

       Optional  macro arguments are indicated by surrounding them with square
       brackets.  If a macro accepts multiple arguments, arguments  containing
       whitespace  must  be  double-quoted ("one two"), to be interpreted cor-
       rectly.  Most macro arguments are strings that will be output as  text;
       exceptions are noted.

       Bear in mind that _g_r_o_f_f is fundamentally a programming system for type-
       setting.  Consequently, the verb "to set" is frequently used  below  in
       the sense "to typeset".

   DDooccuummeenntt ssttrruuccttuurree mmaaccrrooss
       The  highest  level of organization of a man page is determined by this
       group of macros.  ..TTHH (title heading) identifies the document as a  man
       page  and  defines  information  enabling its indexing by _m_a_n_d_b(8) or a
       similar tool.  Sections (..SSHH), one of which is mandatory  and  many  of
       which  are standardized, facilitate quick location of relevant material
       by the reader and aid the man page writer to discuss all essential  as-
       pects of the topic.  Subsections (..SSSS) are optional and permit sections
       that grow long to develop in a controlled way.  Many technical  discus-
       sions  require examples; lengthy ones, especially those reflecting mul-
       tiple lines of input to or output from the system, are usefully  brack-
       eted by ..EEXX and ..EEEE.  When none of the foregoing meets a structural de-
       mand, a section of the discussion can be manually indented  within  ..RRSS
       and ..RREE macros.

       ..TTHH _t_i_t_l_e _s_e_c_t_i_o_n [_f_o_o_t_e_r_-_m_i_d_d_l_e] [_f_o_o_t_e_r_-_o_u_t_s_i_d_e] [_h_e_a_d_e_r_-_m_i_d_d_l_e]
              Define  the  title  of  the man page as _t_i_t_l_e and the section as
              _s_e_c_t_i_o_n.  See _m_a_n(1) for details on the section numbers and suf-
              fixes  applicable  to  your system.  _t_i_t_l_e and _s_e_c_t_i_o_n are posi-
              tioned together at the left and right in the header  line  (with
              _s_e_c_t_i_o_n  in parentheses immediately appended to _t_i_t_l_e).  _f_o_o_t_e_r_-
              _m_i_d_d_l_e is centered in the footer line.  _f_o_o_t_e_r_-_o_u_t_s_i_d_e is  posi-
              tioned  at  the  left in the footer line (or at the left on even
              pages and at the right on odd pages if double-sided printing  is
              active).  _h_e_a_d_e_r_-_m_i_d_d_l_e is centered in the header line.  If _s_e_c_-
              _t_i_o_n is a simple integer between 1 and 9 (inclusive), or is  ex-
              actly "3p", there is no need to specify _h_e_a_d_e_r_-_m_i_d_d_l_e; the macro
              package will supply text for it.

              For HTML output, headers and footers are completely suppressed.

              Additionally, this macro starts a new page; the page  number  is
              reset  to  1  (unless  the  --rrCC11  option is given on the command
              line).  This feature is intended only  for  formatting  multiple
              man pages.

              A  man  page  should contain exactly one ..TTHH call at or near the
              beginning of the file, prior to any other macro calls.

              By convention, _f_o_o_t_e_r_-_m_i_d_d_l_e is  the  most  recent  modification
              date  of the man page source document, and _f_o_o_t_e_r_-_o_u_t_s_i_d_e is the
              name and version or release of the project providing it.

       ..SSHH [_h_e_a_d_i_n_g_-_t_e_x_t]
              Set _h_e_a_d_i_n_g_-_t_e_x_t as a section heading flush left.  The text fol-
              lowing  ..SSHH  up  to the end of the line, or the text on the next
              input line if ..SSHH is given no arguments, is set in bold (or  the
              font  specified  by the string register HHFF) slightly larger than
              the base font size.  Additionally, the left margin and  indenta-
              tion  affecting  subsequent text are reset to their default val-
              ues.  Text on input lines after _h_e_a_d_i_n_g_-_t_e_x_t is set as a  normal
              paragraph (..PPPP).

              The  content  of  _h_e_a_d_i_n_g_-_t_e_x_t and ordering of sections has been
              standardized by common practice, as has much of  the  layout  of
              material  within sections.  For example, a section called "Name"
              or "NAME" must exist, must be the first section  after  the  ..TTHH
              call, and must contain only a line of the form
                     _p_a_g_e_-_t_o_p_i_c[,, ...] \\-- _s_u_m_m_a_r_y_-_d_e_s_c_r_i_p_t_i_o_n
              for  a man page to be properly indexed.  See _m_a_n(7) for the con-
              ventions prevailing on your system.

       ..SSSS [_s_u_b_h_e_a_d_i_n_g_-_t_e_x_t]
              Set _s_u_b_h_e_a_d_i_n_g_-_t_e_x_t as a subsection  heading  indented  (by  de-
              fault) partway between a section heading and a normally-indented
              paragraph (..PPPP).  The text following ..SSSS up to the  end  of  the
              line,  or the text on the next input line if ..SSSS is given no ar-
              guments, is set in bold (or the font  specified  by  the  string
              register HHFF) at the base font size.  Additionally, the left mar-
              gin and indentation affecting subsequent text are reset to their
              default  values.   Text  on input lines after _s_u_b_h_e_a_d_i_n_g_-_t_e_x_t is
              set as a normal paragraph (..PPPP).

       ..EEXX
       ..EEEE    Begin and end example.  After ..EEXX, filling and  hyphenation  are
              disabled  and  a  constant-width  (monospaced) font is selected.
              Calling ..EEEE enables filling and restores the  previous  hyphena-
              tion setting and font.

              Example  regions are useful for formatting code, shell sessions,
              and text file contents.

              These macros are defined on many (but not all) legacy Unix  sys-
              tems  running  classic  _t_r_o_f_f.   To be certain your page will be
              portable to those  systems,  copy  their  definitions  from  the
              _a_n_-_e_x_t_._t_m_a_c file of a _g_r_o_f_f installation.

       ..RRSS [_i_n_d_e_n_t]
              Move the left margin to the right by the value _i_n_d_e_n_t, if speci-
              fied, and by a default amount otherwise; see  subsection  "Hori-
              zontal and vertical spacing" below.  Calls to ..RRSS can be nested;
              each call increments by 1 the indentation  level  used  by  ..RREE.
              The indentation level prior to any ..RRSS calls is 1.

       ..RREE [_l_e_v_e_l]
              Move  the  left margin back to that corresponding to indentation
              level _l_e_v_e_l.  If no argument is given, move the left margin  one
              level back.

   PPaarraaggrraapphh mmaaccrrooss
       A  typical  paragraph (..PPPP) is set at the current left margin, which by
       default is indented from the left margin of the output device.  In  man
       pages  and  other technical literature, definition lists are frequently
       encountered; these can be set as "tagged  paragraphs"  (..TTPP  and  ..TTQQ),
       which have one or more leading tags followed by a paragraph that has an
       additional left indent.  The indented paragraph (..IIPP) macro  is  useful
       to continue the indented content of a narrative started with ..TTPP, or to
       present an itemized or ordered list.

       ..LLPP
       ..PPPP
       ..PP     Begin a new paragraph; these macros are synonymous.  They  break
              the  output line at the current position, followed by a vertical
              space downward by a default amount (which can be changed by  the
              deprecated ..PPDD macro).  The font size and style are reset to de-
              faults; see subsection "Font style macros" below.  Finally,  the
              left margin and indentation are reset to default values.

       ..TTPP [_i_n_d_e_n_t]
              Set a tagged, indented paragraph.  The input line following this
              macro, known as the _t_a_g, is printed at the current left  margin.
              Subsequent  text  is  indented by _i_n_d_e_n_t, if specified, and by a
              default amount otherwise; see subsection "Horizontal and  verti-
              cal spacing" below.

              If  the  tag  is  not  as wide as the indentation, the paragraph
              starts on the same line as the tag, at the  applicable  indenta-
              tion,  and continues on the following lines.  Otherwise, the de-
              scriptive part of the paragraph begins on the line following the
              tag, entirely indented.  The line containing the tag can include
              a macro call, for instance to set the tag in bold with ..BB.

              ..TTPP was used to write the first paragraph of this description of
              ..TTPP, and ..IIPP the subsequent ones.

       ..TTQQ    Set  an  additional  tag  for  a paragraph tagged with ..TTPP.  The
              pending output line is broken.  The tag on the input  line  fol-
              lowing this macro and subsequent lines are handled as with ..TTPP.

              This macro is not defined on legacy Unix systems running classic
              _t_r_o_f_f.  To be certain your page will be portable to  those  sys-
              tems,  copy  its definition from the _a_n_-_e_x_t_._t_m_a_c file of a _g_r_o_f_f
              installation.

              The descriptions of ..LLPP, ..PPPP, and ..PP above  were  written  using
              ..TTPP and ..TTQQ.

       ..IIPP [_t_a_g] [_i_n_d_e_n_t]
              Set an indented paragraph with an optional tag.  The _t_a_g and _i_n_-
              _d_e_n_t arguments, if present, are handled as with  ..TTPP,  with  the
              exception  that  the  _t_a_g argument to ..IIPP cannot include a macro
              call.

              Two convenient use cases for ..IIPP are

                     (1) to start a new paragraph with the same indentation as
                         the previous ..IIPP or ..TTPP paragraph, if no _i_n_d_e_n_t argu-
                         ment is given; and

                     (2) to set a paragraph with a short _t_a_g that is  not  se-
                         mantically  important, such as a bullet (+o)--obtained
                         with the `\(bu' character escape--or list enumerator,
                         as seen in this very paragraph.

   CCoommmmaanndd ssyynnooppssiiss mmaaccrrooss
       Command  synopses  are  a  staple  of section 1 and 8 man pages.  These
       macros aid you to construct one that has the classical Unix appearance.
       Furthermore, some tools are able to interpret these macros semantically
       and treat them appropriately for localization and/or  presentation.   A
       command synopsis is wrapped in ..SSYY/..YYSS calls, with command-line options
       of some formats indicated by ..OOPP.

       These macros are not defined on legacy  Unix  systems  running  classic
       _t_r_o_f_f.  To be certain your page will be portable to those systems, copy
       their definitions from the _a_n_-_e_x_t_._t_m_a_c file of a _g_r_o_f_f installation.

       ..SSYY _c_o_m_m_a_n_d
              Begin synopsis.  Hyphenation is turned off.  The  _c_o_m_m_a_n_d  argu-
              ment  is  set in bold.  The output line is filled as normal, but
              if a break is required, subsequent output lines are indented  by
              the width of _c_o_m_m_a_n_d plus a space.

       ..OOPP _o_p_t_i_o_n_-_n_a_m_e [_o_p_t_i_o_n_-_a_r_g_u_m_e_n_t]
              Indicate an optional command parameter called _o_p_t_i_o_n_-_n_a_m_e, which
              is set in bold.  If the option takes an  argument,  specify  _o_p_-
              _t_i_o_n_-_a_r_g_u_m_e_n_t  using  a  noun,  abbreviation, or hyphenated noun
              phrase.  If present, _o_p_t_i_o_n_-_a_r_g_u_m_e_n_t is preceded by a space  and
              set  in italics.  Square brackets (in roman) surround both argu-
              ments.

       ..YYSS    End synopsis.  Restore indentation and hyphenation  to  previous
              values.

       Multiple  ..SSYY//..YYSS  blocks can be specified, for instance to distinguish
       differing modes of operation of a complex  command  like  _t_a_r(1);  each
       will be separated by a paragraph space.

       ..SSYY  can also be repeated multiple times before a closing ..YYSS, which is
       useful to indicate synonymous ways of invoking a particular mode of op-
       eration.

       For example,

              .SY groff
              .OP \-abcegiklpstzCEGNRSUVXZ
              .OP \-d cs
              .OP \-f fam
              .OP \-F dir
              .OP \-I dir
              .OP \-K arg
              .OP \-L arg
              .OP \-m name
              .OP \-M dir
              .OP \-n num
              .OP \-o list
              .OP \-P arg
              .OP \-r cn
              .OP \-T dev
              .OP \-w name
              .OP \-W name
              .RI [ file
              \&.\|.\|.\&]
              .YS
              .
              .SY groff
              .B \-h
              .SY groff
              .B \-\-help
              .YS

       produces the following output.

              ggrrooffff [--aabbcceeggiikkllppssttzzCCEEGGNNRRSSUUVVXXZZ] [--dd _c_s] [--ff _f_a_m] [--FF _d_i_r]
                    [--II _d_i_r] [--KK _a_r_g] [--LL _a_r_g] [--mm _n_a_m_e] [--MM _d_i_r] [--nn _n_u_m]
                    [--oo _l_i_s_t] [--PP _a_r_g] [--rr _c_n] [--TT _d_e_v] [--ww _n_a_m_e] [--WW _n_a_m_e]
                    [_f_i_l_e ...]

              ggrrooffff --hh
              ggrrooffff ----hheellpp

       Several features of the above example are of note.

       +o      The empty request (.), which does nothing, is used for  vertical
              spacing  in the input file for readability by the document main-
              tainer.  Do not put empty lines in a _r_o_f_f source document.

       +o      The command and option names are presented in bboolldd  to  cue  the
              user that they should be input literally.

       +o      Option  dashes are specified with the `\-' escape sequence; this
              is an important practice to make them clearly visible and to fa-
              cilitate  cut-and-paste  from  the  rendered man page to a shell
              prompt or text file.

       +o      Option arguments and command operands are presented  in  _i_t_a_l_i_c_s
              (underlined on some output devices, such as terminals and emula-
              tors), to cue the user that they must be replaced with appropri-
              ate text.

       +o      Symbols  that  are  neither to be typed literally nor simply re-
              placed appear in the roman style; brackets surround optional ar-
              guments, and an ellipsis indicates that the previous syntactical
              element may be repeated arbitrarily.

              Some  man  pages  use  a   brace-and-pipe   notation   such   as
              "{----ddiiffff|----ccoommppaarree}"  to  indicate  that one and only one of the
              `|'-separated items within the braces must be  input.   If  this
              braced  construct  is furthermore surrounded by square brackets,
              it means that at most one of the items is accepted.

              Authors of man pages should note the use of the zero-width space
              escape  sequence  `\&'  on both sides of the ellipsis; this is a
              good practice to avoid surprises in the event the ellipsis  gets
              refilled  in  your  text editor.  See "Portability", below.  The
              morbidly curious may consult _g_r_o_f_f(7) regarding the narrow-space
              escape sequence `\|'.

   HHyyppeerrlliinnkk aanndd eemmaaiill mmaaccrrooss
       Email  addresses  are  bracketed  with  ..MMTT/..MMEE and URL hyperlinks with
       ..UURR/..UUEE.

       These macros are not defined on legacy  Unix  systems  running  classic
       _t_r_o_f_f.  To be certain your page will be portable to those systems, copy
       their definitions from the _a_n_-_e_x_t_._t_m_a_c file of a _g_r_o_f_f installation.

       ..MMTT _a_d_d_r_e_s_s
       ..MMEE [_p_u_n_c_t_u_a_t_i_o_n]
              Identify _a_d_d_r_e_s_s as an RFC 6068 _a_d_d_r_-_s_p_e_c for  a  "mailto:"  URI
              with  the  text between the two macro calls as the link text.  A
              _p_u_n_c_t_u_a_t_i_o_n argument to ..MMEE is placed at the  end  of  the  link
              text  without  intervening  space.  Note that _a_d_d_r_e_s_s may not be
              visible in the output text, particularly if the man page is  be-
              ing  viewed as HTML.  On a device that is not a browser, _a_d_d_r_e_s_s
              is set in angle brackets after the link text and before _p_u_n_c_t_u_a_-
              _t_i_o_n.

              When rendered by _g_r_o_f_f to a TTY or PostScript output device,

                     Contact
                     .MT fred.foonly@\:fubar.net
                     Fred Foonly
                     .ME
                     for more information.

              displays  as:  "Contact  Fred Foonly <fred.foonly@fubar.net> for
              more information.".

              The use of `\:' to insert hyphenless discretionary breaks  is  a
              _g_r_o_f_f extension and can be omitted.

       ..UURR _U_R_L
       ..UUEE [_p_u_n_c_t_u_a_t_i_o_n]
              Identify  _U_R_L as an RFC 3986 URI hyperlink with the text between
              the two macro calls as the link text.  A _p_u_n_c_t_u_a_t_i_o_n argument to
              ..UUEE  is  placed  at the end of the link text without intervening
              space.  Note that _U_R_L may not be visible  in  the  output  text,
              particularly  if the man page is being viewed as HTML.  On a de-
              vice that is not a browser, _U_R_L is set in angle  brackets  after
              the link text and before _p_u_n_c_t_u_a_t_i_o_n.

              When rendered by _g_r_o_f_f to a TTY or PostScript output device,

                     The GNU Project of the Free Software Foundation hosts the
                     .UR https://\:www.gnu.org/\:software/\:groff/
                     Groff home page
                     .UE .

              displays  as:  "The  GNU Project of the Free Software Foundation
              hosts  the  Groff   home   page   <https://www.gnu.org/software/
              groff/>.".

              The  use  of `\:' to insert hyphenless discretionary breaks is a
              _g_r_o_f_f extension and can be omitted.

   FFoonntt ssttyyllee mmaaccrrooss
       The _m_a_n macro package is limited in its font styling options,  offering
       only  bboolldd  (..BB), _i_t_a_l_i_c (..II), and roman (the default).  Italic text is
       usually set underscored instead on terminals and other classical _n_r_o_f_f-
       style  output  devices.   The  ..SSMM  and ..SSBB macros set text in roman or
       bold, respectively, at a smaller point size; these differ visually from
       regular-sized  roman  or  bold text only on _t_r_o_f_f-style output devices.
       The foregoing macros cause word breaks before  and  after  their  argu-
       ments,  but it is often necessary to set text in different styles with-
       out intervening whitespace.  The macros ..BBII, ..BBRR, ..IIBB,  ..IIRR,  ..RRBB,  and
       ..RRII,  where `B', `I', and `R' indicate bold, italic, and roman, respec-
       tively, set their  odd-  and  even-numbered  arguments  in  alternating
       styles, with no whitespace separating them.

       Because  font styles are presentational rather than semantic, conflict-
       ing traditions have arisen regarding which font styles should  be  used
       to  mark  file  or path names, environment variables, in-line literals,
       and even man page cross-references.

       The default font size and family (for _t_r_o_f_f output devices) is 10-point
       Times.  The default style is roman.

       ..BB [_t_e_x_t]
              Set  _t_e_x_t in bold.  If the macro is given no arguments, the text
              of the next input line is set in bold.

              Use bold for literal portions of syntax synopses,  for  command-
              line  options  in  running text, and for literals that are major
              topics of the subject under discussion; for example,  this  page
              uses  bold for macro and register names.  In ..EEXX/..EEEE examples of
              interactive I/O (such as a shell session), set  only  the  user-
              typed input in bold.

       ..II [_t_e_x_t]
              Set  _t_e_x_t  in  italics.  If the macro is given no arguments, the
              text of the next input line is set in italics.

              Use italics for file and path names, for environment  variables,
              for  enumeration  or  preprocessor  constants in C, for variable
              (user-determined) portions of syntax synopses, for the first oc-
              currence only of a technical concept being introduced, for names
              of works of software (including commands and functions, but  ex-
              cluding  names  of operating systems or their kernels), and any-
              where a parameter requiring replacement by the user  is  encoun-
              tered.  An exception involves variable text in a context that is
              already marked up in italics, such as file or  path  names  with
              variable  components;  in  such  cases, follow the convention of
              mathematical typography: set the file or path name in italics as
              usual  (see ..IIRR below), but use roman for the variable part, and
              italics again in running roman text when referring to the  vari-
              able material.

       ..SSMM [_t_e_x_t]
              Set  _t_e_x_t  one point size smaller than the default size.  If the
              macro is given no arguments, the text of the next input line  is
              set smaller.

              _N_o_t_e: _n_r_o_f_f-style output devices, such as terminals, will render
              _t_e_x_t at the normal font size instead.  Do not rely upon  ..SSMM  to
              communicate semantic information distinct from using roman style
              at the normal size; it will be hidden from  readers  using  such
              devices.

       ..SSBB [_t_e_x_t]
              Set  _t_e_x_t in bold, one point size smaller than the default size.
              If the macro is given no arguments, the text of the  next  input
              line is set smaller and in bold.

              _N_o_t_e: _n_r_o_f_f-style output devices, such as terminals, will render
              _t_e_x_t in bold at the normal font size instead.  Do not rely  upon
              ..SSBB to communicate semantic information distinct from using bold
              style at the normal size; it will be hidden from  readers  using
              such devices.

       Note  what is _n_o_t prescribed for setting in bold or italics above: ele-
       ments of "synopsis language" such as ellipses and brackets  around  op-
       tions; proper names and adjectives; titles of anything other than works
       of literature or software; identifiers for standards documents or tech-
       nical   reports   such   as  CSTR  #54,  RFC  1918,  Unicode  11.0,  or
       POSIX.1-2017; acronyms; and occurrences after the first of a  technical
       term  or  piece  of  jargon.  Again, the names of operating systems and
       their kernels are, by practically universal convention, set in roman.

       Be frugal with the use of italics for emphasis, and  particularly  with
       the use of bold.  Brief runs of literal text, such as references to in-
       dividual characters or short strings, including section and  subsection
       headings  of  man  pages,  are  suitable objects for quotation; see the
       `\(lq', `\(rq', `\(oq', and `\(cq' escapes in subsection  "Portability"
       below.

       Unlike  the  above font style macros, the font alternation macros below
       accept only arguments on the same line as the macro  call.   If  white-
       space  is  required within one of the arguments, first consider whether
       the same result could be achieved with as much  clarity  by  using  the
       single-style  macros  on separate input lines.  When it cannot, double-
       quote an argument with one or more embedded space characters.   Setting
       all   three  different  styles  within  one  whitespace-delimited  word
       presents challenges; it is possible with the `\c' and/or `\f'  escapes,
       but see subsection "Portability" below for caveats.

       ..BBII _b_o_l_d_-_t_e_x_t _i_t_a_l_i_c_-_t_e_x_t ...
              Set each argument in bold and italics, alternately.

                     .BI \-r name = n

       ..BBRR _b_o_l_d_-_t_e_x_t _r_o_m_a_n_-_t_e_x_t ...
              Set each argument in bold and roman, alternately.

                     Any such change becomes effective with the first use of
                     .BR .NH ,
                     .I after
                     the new alias is defined.

       ..IIBB _i_t_a_l_i_c_-_t_e_x_t _b_o_l_d_-_t_e_x_t ...
              Set each argument in italics and bold, alternately.

                     All macro package files must be named
                     .IB name .tmac
                     to fully use the
                     .I tmac
                     mechanism.

       ..IIRR _i_t_a_l_i_c_-_t_e_x_t _r_o_m_a_n_-_t_e_x_t ...
              Set each argument in italics and roman, alternately.

                     This is the first command of the
                     .IR prologue .

       ..RRBB _r_o_m_a_n_-_t_e_x_t _b_o_l_d_-_t_e_x_t ...
              Set each argument in roman and bold, alternately.

                     Also, the statement
                     .RB \(oq "delim on" \(cq
                     is not handled specially.

       ..RRII _r_o_m_a_n_-_t_e_x_t _i_t_a_l_i_c_-_t_e_x_t ...
              Set each argument in roman and italics, alternately.

                     .RI [ file
                     \&.\|.\|.\&]

   HHoorriizzoonnttaall aanndd vveerrttiiccaall ssppaacciinngg
       The  _i_n_d_e_n_t  argument accepted by ..RRSS, ..IIPP, ..TTPP, and the deprecated ..HHPP
       is a number plus an optional scaling indicator.  If no scaling  indica-
       tor is given, the _m_a_n package assumes `n'; that is, the width of a let-
       ter "n" in the font current when the macro is called.  See section "Nu-
       merical Expressions" in _g_r_o_f_f(7) for further details.  An indent speci-
       fied in a call to ..IIPP, ..TTPP, or the deprecated ..HHPP  persists  until  (1)
       another  of these macros is called with an explicit indent argument, or
       (2) ..SSHH, ..SSSS, or ..PPPP or its synonyms is called; these clear the  indent
       entirely.

       Indents  set  by  ..RRSS  move the left margin and persist until ..RRSS, ..RREE,
       ..SSHH, or ..SSSS is called.  The default indentation, exhibited by  ordinary
       ..PPPP  paragraphs not within an ..RRSS/..RREE relative indent, is 7.2n in _t_r_o_f_f
       mode and 7n in _n_r_o_f_f mode.  The HTML output device is an exception;  it
       ignores  indentation  completely.   This same indentation is used again
       (additively) for the defaults of ..IIPP, ..TTPP, ..RRSS, and the deprecated ..HHPP.
       Section headings (..SSHH) are set flush with the left margin of the output
       device, and subsection headings (..SSSS) are indented 3n.

       Resist the temptation to mock up tabular or  multi-column  output  with
       ASCII  tab characters or the indentation arguments to ..IIPP, ..TTPP, ..RRSS, or
       the deprecated ..HHPP; the result may not render comprehensibly on an out-
       put device you fail to check, or which is developed in the future.  The
       table preprocessor _t_b_l(1) can likely meet your needs.

       The following macros cause a line break with the insertion of  vertical
       space:  ..SSHH, ..SSSS, ..TTPP, ..TTQQ, ..PPPP (and its synonyms), ..IIPP, and the depre-
       cated ..HHPP.  The default inter-section and  inter-paragraph  spacing  is
       1  line  in  _n_r_o_f_f mode, and 0.4v in _t_r_o_f_f mode.  (The deprecated macro
       ..PPDD can change this vertical spacing, but its use is discouraged.)  The
       macros  ..RRSS,  ..RREE,  ..EEXX, and ..EEEE also cause a break but no insertion of
       vertical space.

   NNuummbbeerr rreeggiisstteerrss
       Number registers are described in section "Options" below.

   SSttrriinngg rreeggiisstteerrss
       The following strings are defined.

       \\**RR    expands to the character escape for the "registered sign" glyph,
              `\(rg', if available, and "(Reg.)" otherwise.

       \\**SS    expands  to  an escape setting the font size to the document de-
              fault.

       \\**((HHFF  expands to the font identifier used to print headings  and  sub-
              headings.  The default is `B'.

       \\**((llqq
       \\**((rrqq  expand to the character escapes for left and right double-quota-
              tion marks, `\(lq' and `\(rq', respectively.

       \\**((TTmm  expands to the character escape for the "trade mark sign" glyph,
              `\(tm', if available, and "(TM)" otherwise.

   IInntteerraaccttiioonn wwiitthh pprreepprroocceessssoorrss
       When  a  preprocessor like _t_b_l or _e_q_n is needed, a hint can be given to
       the man page formatter by making the first line of a man page look like
       this:

              ''\\"" _w_o_r_d

       Note that the line starts with an apostrophe ('), not a dot, and that a
       single space character follows the double quote.  The _w_o_r_d consists  of
       one  letter  for  each needed preprocessor: `e' for _e_q_n, `r' for _r_e_f_e_r,
       and `t' for _t_b_l.  Modern implementations of the _m_a_n  program  interpret
       this first line and automatically call the right preprocessor(s).

       The  usual  _t_b_l  and  _e_q_n macros for table and equation inclusion, ..TTSS,
       ..TT&&, ..TTEE, ..EEQQ, and ..EENN, may be used freely.  Note that _n_r_o_f_f output de-
       vices are extremely limited in presentation of mathematical equations.

   PPoorrttaabbiilliittyy
       The two major syntactical categories of _r_o_f_f languages are requests and
       escapes.  Since the _m_a_n macros are implemented in terms  of  _g_r_o_f_f  re-
       quests and escapes, one can, in principle, supplement the functionality
       of _m_a_n with these lower-level elements where necessary.

       Note, however, that using raw _g_r_o_f_f requests is  likely  to  make  your
       page  render  poorly on the class of viewers that transform it to HTML.
       Some requests make implicit assumptions about things like character and
       page  sizes  that  may  not  hold in an HTML environment; also, many of
       these viewers don't interpret the full _g_r_o_f_f vocabulary, a problem that
       can lead to portions of your text being silently dropped.

       For  portability  to  modern viewers, it is best to write your page en-
       tirely with the macros described in this  page  (except  for  the  ones
       identified as deprecated, which should be avoided).  The macros we have
       described as extensions (..EEXX/..EEEE, ..SSYY/..OOPP/..YYSS,  ..UURR/..UUEE,  and  ..MMTT/..MMEE)
       should  be  used  with caution, as they may not yet be built in to some
       viewer that is important to your audience.  If in doubt, copy  the  im-
       plementation into your page--after the ..TTHH call and the "Name" section,
       to accommodate timid _m_a_n_d_b implementations.

       Similar caveats apply to escapes.  Some escape  sequences  are  however
       required  for  correct typesetting even in man pages and usually do not
       cause portability problems:

       \\""     Comment.  Everything after the double-quote to the  end  of  the
              input  line  is  ignored.   Whole-line  comments  are frequently
              placed immediately after the empty request `.'.

       \\_n_e_w_l_i_n_e
              Join the next input line to the current one.  Except for the up-
              date of the input line counter (used for diagnostic messages and
              related purposes), a series of lines ending in backslash-newline
              is  transparent  to _g_r_o_f_f.  Use this escape to break excessively
              input long lines for document maintenance.

       \\~~     Adjustable, non-breaking space character.  Use  this  escape  to
              prevent  a  break  inside  a short phrase or between a numerical
              quantity and its corresponding unit(s).

                     Before starting the motor, set the output speed to\~1.
                     There are 1,024\~bytes in 1\~kiB.
                     CSTR\~#8 documents the B language.

       \\&&     Zero-width space.  Append to an input line to prevent an end-of-
              sentence  punctuation sequence from being recognized as such, or
              insert at the beginning of an input line to  prevent  a  dot  or
              apostrophe from being interpreted as the beginning of a _r_o_f_f re-
              quest.

       \\((aaqq   ASCII apostrophe.  Use for syntax elements of  programming  lan-
              guages because some output devices might replace unescaped apos-
              trophes with right single quotation marks.

       \\((ooqq   Opening single quotation mark.
       \\((ccqq   Closing single quotation mark.

              Use these for paired directional single quotes, `like this'.

       \\((ddqq   ASCII double-quote.  Sometimes needed after macro calls to  pre-
              vent  the  interpretation  of the ASCII quotation mark character
              `"' as the beginning or end of a macro argument.

       \\((llqq   Left double quotation mark.
       \\((rrqq   Right double quotation mark.

              Use these for paired directional double quotes, "like this".

       \\((eemm   Em-dash.  Use for an interruption in a  sentence--such  as  this
              one.

       \\((eenn   En-dash.  Use to separate the two ends of a range, in particular
              between numbers, for example: the digits 1-9.

       \\((ggaa   ASCII grave accent.  Use for syntax elements of programming lan-
              guages,  for  example  shell command substitutions, because some
              output devices might replace unescaped grave accents  with  left
              single quotation marks.

       \\((hhaa   ASCII circumflex accent.  Use for syntax elements of programming
              languages because some output devices  might  replace  unescaped
              circumflex accents with non-ASCII glyphs like the Unicode U+02C6
              modifier letter circumflex.

       \\((ttii   ASCII tilde.  Use for syntax elements of  programming  languages
              because  some output devices might replace unescaped tildes with
              non-ASCII glyphs like the Unicode U+02DC small tilde.

       \\--     Minus sign.  Also use this to display syntax elements  that  re-
              quire the ASCII hyphen-minus character, for example command-line
              options and C language operators.  The unescaped `-' input char-
              acter  is  not appropriate for these cases because it may render
              as a hyphen on some output devices.

       \\cc     If this escape sequence occurs at the end of an input  line,  no
              white  space  is  inserted  between the last glyph on it and the
              first glyph resulting from the next input line.  This  is  occa-
              sionally  useful when three different fonts are needed in a sin-
              gle word.

                     Normally, the final output file should be named
                     .IB file .pdf\c
                     \&.

              Note that when using this trick with the ..BBII or ..RRII macros,  you
              will  need  to manually add an italic correction escape `\/' be-
              fore the `\c' due to way macros expand their arguments.

                     Files processed with
                     .B groff \-mom
                     (or
                     .BI "\-m " mom\/\c
                     ) produce PostScript output by default.

              Alternatively, and perhaps with  better  portability,  the  `\f'
              font  escape sequence can be used; see below.  Using `\c' to in-
              clude the output from more than one input line  into  the  next-
              line  argument of a ..TTPP macro will render incorrectly with _g_r_o_f_f
              1.22.3, _m_a_n_d_o_c 1.14.1, older versions  of  these  programs,  and
              perhaps with some other formatters.

       \\ee     Widely  used in man pages to represent a backslash output glyph.
              It works reliably as long as the ..eecc request is not used,  which
              should never happen in man pages, and it is slightly more porta-
              ble than the more exact `\(rs' ("reverse  solidus")  escape  se-
              quence.

       \\ffBB, \\ffII, \\ffRR, \\ffPP
              Switch to bold, italic, roman, or back to the previous font, re-
              spectively.  Either these or `\c' is needed when three different
              fonts are required in a single whitespace-delimited word.

                     .RB [ \-\-reference\-dictionary=\fI\,name\/\fP ]

                     .RB [ \-\-reference\-dictionary=\c
                     .IR name ]

              Font escapes may be more portable than `\c'.  As shown above, it
              is up to you to account for italic  corrections  with  `\/'  and
              `\,',  which  are themselves _g_r_o_f_f extensions, if desired and if
              supported by your implementation.

              Note that `\fP' reliably returns to the style in use immediately
              preceding  the previous `\f' escape only if no sectioning, para-
              graph, or font face macro calls have intervened.

              As long as only two fonts are needed in any  single  whitespace-
              delimited  word, font alternation macros like ..BBII usually result
              in more readable source code than `\f' escapes do.

       For maximum portability, escape sequences and  special  characters  not
       listed above are better avoided in man pages.

   DDeepprreeccaatteedd ffeeaattuurreess
       Use of the following is discouraged.

       ..AATT [_s_y_s_t_e_m [_r_e_l_e_a_s_e]]
              Alter  the  footer  for  use with AT&T man pages, overriding any
              definition of the _f_o_o_t_e_r_-_o_u_t_s_i_d_e argument to  ..TTHH.   This  macro
              exists only for compatibility; don't use it.

              The first argument _s_y_s_t_e_m can be:

                     3      7th edition _(_d_e_f_a_u_l_t_)

                     4      System III

                     5      System V

              The  optional second argument _r_e_l_e_a_s_e specifies the release num-
              ber, such as in "System V Release 3".

       ..BBTT    Set the page footer.  Redefine this macro to get control of  the
              footer.

       ..DDTT    Set  tabs  every  0.5 inches.  Since this macro is always called
              during a ..TTHH macro, it makes sense to call it only  if  the  tab
              positions have been changed.

              Use  of  this presentation-level macro is deprecated.  It trans-
              lates poorly to HTML, under which exact whitespace  control  and
              tabbing  are  not  readily available.  Thus, information or dis-
              tinctions that you use ..DDTT to express are likely to be lost.  If
              you  feel  tempted to use it, you should probably be composing a
              table using _t_b_l(1) markup instead.

       ..HHPP [_i_n_d_e_n_t]
              Set up a paragraph with a hanging left indentation.  The  _i_n_d_e_n_t
              argument, if present, is handled as with ..TTPP.

              Use of this presentation-level macro is deprecated.  While it is
              universally portable to legacy Unix systems, a hanging  indenta-
              tion  cannot  be  expressed naturally under HTML, and many HTML-
              based manual viewers simply interpret it as a starter for a nor-
              mal  paragraph.   Thus, any information or distinction you tried
              to express with the indentation may be lost.

       ..PPDD [_v_e_r_t_i_c_a_l_-_s_p_a_c_e]
              Define the vertical space between paragraphs  or  (sub)sections.
              The  optional  argument  _v_e_r_t_i_c_a_l_-_s_p_a_c_e  specifies the amount of
              space; the default scaling is `v').  Without  an  argument,  the
              spacing  is reset to its default value; see "Horizontal and ver-
              tical spacing" above.

              Use of this presentation-level macro is deprecated.   It  trans-
              lates  poorly  to HTML, under which exact control of inter-para-
              graph spacing is not readily available.   Thus,  information  or
              distinctions that you use ..PPDD to express are likely to be lost.

       ..PPTT    Set  the page header.  Redefine this macro to get control of the
              header.

       ..UUCC [_v_e_r_s_i_o_n]
              Alter the footer for use with BSD man pages, overriding any def-
              inition  of  the _f_o_o_t_e_r_-_o_u_t_s_i_d_e argument to ..TTHH.  This macro ex-
              ists only for compatibility; don't use it.

              The argument _v_e_r_s_i_o_n can be:

                     3      3rd Berkeley Distribution _(_d_e_f_a_u_l_t_)

                     4      4th Berkeley Distribution

                     5      4.2 Berkeley Distribution

                     6      4.3 Berkeley Distribution

                     7      4.4 Berkeley Distribution

   HHiissttoorryy
       According to its own _m_a_n(7) page, Version 7 Unix (1979)  supported  all
       of  the macros described in this page not listed as GNU extensions, ex-
       cept ..PP, ..SSBB, ..SSSS, and the deprecated ..AATT, ..BBTT, ..PPTT, and ..UUCC.  The only
       string  registers  defined were RR and SS; no number registers were docu-
       mented.

OOPPTTIIOONNSS
       The following _g_r_o_f_f options set number registers recognized and used by
       the _m_a_n macro package.

       --rrccRR==11 Continuous  rendering.   Create a single, very long page instead
              of multiple pages.  This is the  default  in  _n_r_o_f_f  mode.   Use
              --rrccRR==00 to disable it.

       --rrCC11   Number  pages  continuously.  If more than one man page is given
              on the command line, number the pages continuously, rather  than
              starting each at 1.

       --rrDD11   Enable  double-sided  printing.   Footers for even and odd pages
              are formatted differently; see the description of ..TTHH in  "Docu-
              ment structure macros", above.

       --rrFFTT==_f_o_o_t_e_r_-_d_i_s_t_a_n_c_e
              Set  distance  of the footer, relative to the bottom of the page
              if negative or relative to the top if positive,  to  _f_o_o_t_e_r_-_d_i_s_-
              _t_a_n_c_e.  The default is -0.5i.

       --rrHHYY==_f_l_a_g_s
              Set  hyphenation  flags.   Permissible values of _f_l_a_g_s are docu-
              mented in section "Hyphenation" of _g_r_o_f_f(7).  The default  is  4
              if  continuous rendering is enabled (--rrccRR==11 above), and 6 other-
              wise.

       --rrIINN==_i_n_d_e_n_t
              Set the body text indentation (for normal paragraphs) to _i_n_d_e_n_t.
              See  "Horizontal and vertical spacing" above for the default in-
              dentation value.  For _n_r_o_f_f, _i_n_d_e_n_t should always be an  integer
              multiple of unit `n' to get consistent indentation.

       --rrLLLL==_l_i_n_e_-_l_e_n_g_t_h
              Set  line  length.  If this option is not given, the line length
              is set to respect any value set by a prior ".ll" request  (which
              _m_u_s_t  be  in effect when the ..TTHH macro is invoked), if this dif-
              fers from the built-in default for the formatter;  otherwise  it
              defaults to 78n in _n_r_o_f_f mode and 6.5i in _t_r_o_f_f mode.

              Note  that  the  use  of  a ".ll" request to initialize the line
              length is supported for backward compatibility  with  some  ver-
              sions of the _m_a_n program; direct initialization of the LLLL regis-
              ter should _a_l_w_a_y_s be preferred to the use of such a request.  In
              particular,  note that a ".ll 65n" request does _n_o_t preserve the
              normal _n_r_o_f_f default line length (the _m_a_n default initialization
              to  78n prevails), whereas the --rrLLLL==6655nn option, or an equivalent
              ".nr LL 65n" request preceding the use of the  ..TTHH  macro,  _d_o_e_s
              set a line length of 65n.

       --rrLLTT==_t_i_t_l_e_-_l_e_n_g_t_h
              Set title length.  If this option is not given, the title length
              defaults to the line length.

       --rrPP_n   Start enumeration of pages at _n rather than 1.

       --rrSS_p_o_i_n_t_-_s_i_z_e
              Use _p_o_i_n_t_-_s_i_z_e as the base document font size.  Acceptable  val-
              ues are 10, 11, or 12.  See subsection "Font style macros" above
              for the default.

       --rrSSNN==_s_u_b_s_e_c_t_i_o_n_-_i_n_d_e_n_t
              Set subsection indentation to _s_u_b_s_e_c_t_i_o_n_-_i_n_d_e_n_t.  See  "Horizon-
              tal  and  vertical  spacing"  above  for the default indentation
              value.

       --rrXX_p   After page _p, number pages as _pa, _pb, _pc, and so forth.  For ex-
              ample,  the  option --rrXX22 produces the following page numbers: 1,
              2, 2a, 2b, 2c, and so on.

FFIILLEESS
       _d_:_/_u_s_r_/_s_h_a_r_e_/_g_r_o_f_f_/_1_._2_2_._4_/_t_m_a_c_/_m_a_n_._t_m_a_c
       _d_:_/_u_s_r_/_s_h_a_r_e_/_g_r_o_f_f_/_1_._2_2_._4_/_t_m_a_c_/_a_n_._t_m_a_c
              These are wrapper files to call _a_n_d_o_c_._t_m_a_c.

       _d_:_/_u_s_r_/_s_h_a_r_e_/_g_r_o_f_f_/_1_._2_2_._4_/_t_m_a_c_/_a_n_d_o_c_._t_m_a_c
              This brief _g_r_o_f_f program detects whether the _m_a_n or  _m_d_o_c  macro
              package  is being used by a document and loads the correct macro
              definitions, taking advantage of the fact that pages using  them
              must  call  ..TTHH or ..DDdd, respectively, as their first macro.  Be-
              cause the wrappers above load this file, a _m_a_n program  or  user
              typing,  for  example,  "groff -man page.1", need not know which
              package the file _p_a_g_e_._1 uses.  Multiple  man  pages,  in  either
              format, can be handled.

       _d_:_/_u_s_r_/_s_h_a_r_e_/_g_r_o_f_f_/_1_._2_2_._4_/_t_m_a_c_/_a_n_-_o_l_d_._t_m_a_c
              Most  _m_a_n  macros are contained in this file.  It also loads the
              GNU extensions from _a_n_-_e_x_t_._t_m_a_c (see below).

       _d_:_/_u_s_r_/_s_h_a_r_e_/_g_r_o_f_f_/_1_._2_2_._4_/_t_m_a_c_/_a_n_-_e_x_t_._t_m_a_c
              The extension macro definitions for ..SSYY, ..OOPP, ..YYSS, ..TTQQ, ..EEXX/..EEEE,
              ..UURR/..UUEE,  and ..MMTT/..MMEE are contained in this file, which is writ-
              ten in classic _t_r_o_f_f and permissively licensed--not  copylefted.
              Man page authors concerned about portability to legacy Unix sys-
              tems are encouraged to copy these definitions into their  pages,
              and  maintainers  of _t_r_o_f_f implementations or work-alike systems
              that format man pages are encouraged to re-use them.

              Note that the definitions for these macros are  read  after  the
              call  of  ..TTHH, so they will replace any macros of the same names
              preceding it in your file.  If you use your own  implementations
              of  these macros, they must be defined after calling ..TTHH to have
              any effect.

       _d_:_/_u_s_r_/_s_h_a_r_e_/_g_r_o_f_f_/_s_i_t_e_-_t_m_a_c_/_m_a_n_._l_o_c_a_l
              Local changes and customizations should be put into this file.

NNOOTTEESS
       Some tips on troubleshooting your man pages follow.

       +o ..RRSS doesn't indent relative to my indented paragraph
              The ..RRSS macro sets the indentation relative to the amount  of  a
              _n_o_r_m_a_l  paragraph  (..PPPP and its synonyms).  The same default in-
              dentation amount is used for ..RRSS, ..IIPP, ..TTPP, and  the  deprecated
              ..HHPP.   If  you  need  to start an indent relative to an indented
              paragraph, call ..RRSS repeatedly until an  acceptable  indentation
              is  achieved,  or  give  ..RRSS  an indentation argument that is at
              least as much as the paragraph's indentation amount relative  to
              an  adjacent  ..PPPP paragraph.  See "Horizontal and vertical spac-
              ing" above for the values.

       +o ..RREE doesn't reset the indent to the expected level
       +o warning: scale indicator invalid in this context
       +o warning: number register 'an-saved-margin_n' not defined
       +o warning: number register 'an-saved-prevailing-indent_n' not defined
              The ..RRSS macro takes an indentation _a_m_o_u_n_t as  an  argument;  the
              ..RREE  macro's  argument  is  a specific indentation _l_e_v_e_l.  ..RREE 11
              goes to the level before any ..RRSS macros were called, ..RREE 22  goes
              to  the  level of the first ..RRSS call you made, and so forth.  If
              you desire symmetry in your macro calls, simply  issue  one  ..RREE
              without an argument for each ..RRSS that precedes it.

              After  calls  to the ..SSHH and ..SSSS sectioning macros, all relative
              indents are cleared and calls to ..RREE have no effect.

AAUUTTHHOORRSS
       The GNU version of the _m_a_n macro package was written by James Clark and
       contributors.  The extension macros were written by Werner Lemberg <wl@
       gnu.org> and Eric S. Raymond <esr@thyrsus.com>.

       This document was originally written for the Debian GNU/Linux system by
       Susan  G.  Kleinmann <sgk@debian.org>.  It was corrected and updated by
       Werner Lemberg and G. Branden Robinson.  The extension macros were doc-
       umented by Eric S. Raymond; he also originated the portability section,
       to which Ingo Schwarze contributed most of the material on  escape  se-
       quences.

SSEEEE AALLSSOO
       _G_r_o_f_f_:  _T_h_e  _G_N_U _I_m_p_l_e_m_e_n_t_a_t_i_o_n _o_f _t_r_o_f_f, by Trent A. Fisher and Werner
       Lemberg, is the main _g_r_o_f_f documentation.  You can browse  it  interac-
       tively with "info groff".

       _t_b_l(1), _e_q_n(1), and _r_e_f_e_r(1) are preprocessors used with man pages.

       _m_a_n(1) describes the man page formatter on your system.

       _g_r_o_f_f___m_d_o_c(7)  describes the _g_r_o_f_f version of the BSD-originated alter-
       native macro package for man pages.

       _g_r_o_f_f(7), _g_r_o_f_f___c_h_a_r(7), _m_a_n(7)



groff 1.22.4                     December 2018                    GROFF_MAN(7)
